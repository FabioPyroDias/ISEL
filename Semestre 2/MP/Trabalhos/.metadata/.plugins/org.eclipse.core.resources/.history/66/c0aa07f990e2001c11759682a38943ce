package tp4;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

public class SaveSystem {
	
	private static File saveFile;
	
	public static void saveFileInitialization()
	{
		
		saveFile = new File("SaveFile.xml");
		
		if(!saveFile.exists())
		{
			try {
				saveFile.createNewFile();
				createSaveFile();
			} catch (IOException e) {
				System.out.println("An error has occurred");
				e.printStackTrace();
			}
		}
	}
	
	public static void saveGame(String playerName)
	{
		// Procurar no SaveFile se existe algum jogo com o nome dessa personagem.
		// Se sim, substituir essa informação toda.
		// Se não, criar um novo elemento Game e gravar essa informação.
	}
	
	public static void loadGame(String playerName)
	{
		// A partir do playerName, encontrar o node-pai.
		// Carregar toda a informação desse jogo
	}
	
	private static void createSaveFile()
	{
        try {
        	DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            
            Document doc = dBuilder.newDocument();
            Element rootElement = doc.createElement("SaveData");
            
            Element saves = doc.createElement("SaveGames");
            Element lastSave = doc.createElement("LastSavedGame");
            
            rootElement.appendChild(saves);
            rootElement.appendChild(lastSave);
            
            doc.appendChild(rootElement);
        
            FileOutputStream output = new FileOutputStream("SaveFile.xml");
            
            TransformerFactory transformerFactory = TransformerFactory.newInstance();
            Transformer transformer = transformerFactory.newTransformer();
            
            // pretty print XML
            transformer.setOutputProperty(OutputKeys.INDENT, "yes");
            
            DOMSource source = new DOMSource(doc);
            StreamResult result = new StreamResult(output);

            transformer.transform(source, result);
            
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        
        
	}
	
}